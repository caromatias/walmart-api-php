<?php

/**
 * WFSOrder
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */

/**
 * Order Management
 *
 * This class is auto-generated by the OpenAPI generator v6.6.0 (https://openapi-generator.tech).
 * Do not edit the class manually.
 */

namespace Walmart\Models\MP\CL\Orders;

use Walmart\Models\BaseModel;

/**
 * WFSOrder Class Doc Comment
 *
 * @category Class
 * @package  Walmart
 * @author   Jesse Evers
 * @link     https://highsidelabs.co
 * @email    jesse@highsidelabs.co
 */
class WFSOrder extends BaseModel
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static string $openAPIModelName = 'WFSOrder';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static array $openAPITypes = [
        'purchaseOrderId' => 'string',
        'customerOrderId' => 'string',
        'customerEmailId' => 'string',
        'customerRfc' => 'string',
        'orderDate' => 'int',
        'shippingInfo' => '\Walmart\Models\MP\CL\Orders\ShippingInfo',
        'orderSummary' => '\Walmart\Models\MP\CL\Orders\OrderSummary',
        'orderLines' => '\Walmart\Models\MP\CL\Orders\OrderLines'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static array $openAPIFormats = [
        'purchaseOrderId' => null,
        'customerOrderId' => null,
        'customerEmailId' => null,
        'customerRfc' => null,
        'orderDate' => 'int64',
        'shippingInfo' => null,
        'orderSummary' => null,
        'orderLines' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'purchaseOrderId' => false,
        'customerOrderId' => false,
        'customerEmailId' => false,
        'customerRfc' => false,
        'orderDate' => false,
        'shippingInfo' => false,
        'orderSummary' => false,
        'orderLines' => false
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static array $attributeMap = [
        'purchaseOrderId' => 'purchaseOrderId',
        'customerOrderId' => 'customerOrderId',
        'customerEmailId' => 'customerEmailId',
        'customerRfc' => 'customerRfc',
        'orderDate' => 'orderDate',
        'shippingInfo' => 'shippingInfo',
        'orderSummary' => 'orderSummary',
        'orderLines' => 'orderLines'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static array $setters = [
        'purchaseOrderId' => 'setPurchaseOrderId',
        'customerOrderId' => 'setCustomerOrderId',
        'customerEmailId' => 'setCustomerEmailId',
        'customerRfc' => 'setCustomerRfc',
        'orderDate' => 'setOrderDate',
        'shippingInfo' => 'setShippingInfo',
        'orderSummary' => 'setOrderSummary',
        'orderLines' => 'setOrderLines'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static array $getters = [
        'purchaseOrderId' => 'getPurchaseOrderId',
        'customerOrderId' => 'getCustomerOrderId',
        'customerEmailId' => 'getCustomerEmailId',
        'customerRfc' => 'getCustomerRfc',
        'orderDate' => 'getOrderDate',
        'shippingInfo' => 'getShippingInfo',
        'orderSummary' => 'getOrderSummary',
        'orderLines' => 'getOrderLines'
    ];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('purchaseOrderId', $data ?? [], null);
        $this->setIfExists('customerOrderId', $data ?? [], null);
        $this->setIfExists('customerEmailId', $data ?? [], null);
        $this->setIfExists('customerRfc', $data ?? [], null);
        $this->setIfExists('orderDate', $data ?? [], null);
        $this->setIfExists('shippingInfo', $data ?? [], null);
        $this->setIfExists('orderSummary', $data ?? [], null);
        $this->setIfExists('orderLines', $data ?? [], null);
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];
        return $invalidProperties;
    }

    /**
     * Gets purchaseOrderId
     *
     * @return string
     */
    public function getPurchaseOrderId()
    {
        return $this->container['purchaseOrderId'];
    }

    /**
     * Sets purchaseOrderId
     *
     * @param string $purchaseOrderId purchaseOrderId
     *
     * @return self
     */
    public function setPurchaseOrderId($purchaseOrderId)
    {
        if (is_null($purchaseOrderId)) {
            throw new \InvalidArgumentException('non-nullable purchaseOrderId cannot be null');
        }
        $this->container['purchaseOrderId'] = $purchaseOrderId;
        return $this;
    }

    /**
     * Gets customerOrderId
     *
     * @return string
     */
    public function getCustomerOrderId()
    {
        return $this->container['customerOrderId'];
    }

    /**
     * Sets customerOrderId
     *
     * @param string $customerOrderId customerOrderId
     *
     * @return self
     */
    public function setCustomerOrderId($customerOrderId)
    {
        if (is_null($customerOrderId)) {
            throw new \InvalidArgumentException('non-nullable customerOrderId cannot be null');
        }
        $this->container['customerOrderId'] = $customerOrderId;
        return $this;
    }

    /**
     * Gets customerEmailId
     *
     * @return string
     */
    public function getCustomerEmailId()
    {
        return $this->container['customerEmailId'];
    }

    /**
     * Sets customerEmailId
     *
     * @param string $customerEmailId customerEmailId
     *
     * @return self
     */
    public function setCustomerEmailId($customerEmailId)
    {
        if (is_null($customerEmailId)) {
            throw new \InvalidArgumentException('non-nullable customerEmailId cannot be null');
        }
        $this->container['customerEmailId'] = $customerEmailId;
        return $this;
    }

    /**
     * Gets customerRfc
     *
     * @return string
     */
    public function getCustomerRfc()
    {
        return $this->container['customerRfc'];
    }

    /**
     * Sets customerRfc
     *
     * @param string $customerRfc customerRfc
     *
     * @return self
     */
    public function setCustomerRfc($customerRfc)
    {
        if (is_null($customerRfc)) {
            throw new \InvalidArgumentException('non-nullable customerRfc cannot be null');
        }
        $this->container['customerRfc'] = $customerRfc;
        return $this;
    }

    /**
     * Gets orderDate
     *
     * @return int
     */
    public function getOrderDate()
    {
        return $this->container['orderDate'];
    }

    /**
     * Sets orderDate
     *
     * @param int $orderDate orderDate
     *
     * @return self
     */
    public function setOrderDate($orderDate)
    {
        if (is_null($orderDate)) {
            throw new \InvalidArgumentException('non-nullable orderDate cannot be null');
        }
        $this->container['orderDate'] = $orderDate;
        return $this;
    }

    /**
     * Gets shippingInfo
     *
     * @return \Walmart\Models\MP\CL\Orders\ShippingInfo
     */
    public function getShippingInfo()
    {
        return $this->container['shippingInfo'];
    }

    /**
     * Sets shippingInfo
     *
     * @param \Walmart\Models\MP\CL\Orders\ShippingInfo $shippingInfo shippingInfo
     *
     * @return self
     */
    public function setShippingInfo($shippingInfo)
    {
        if (is_null($shippingInfo)) {
            throw new \InvalidArgumentException('non-nullable shippingInfo cannot be null');
        }
        $this->container['shippingInfo'] = $shippingInfo;
        return $this;
    }

    /**
     * Gets orderSummary
     *
     * @return \Walmart\Models\MP\CL\Orders\OrderSummary
     */
    public function getOrderSummary()
    {
        return $this->container['orderSummary'];
    }

    /**
     * Sets orderSummary
     *
     * @param \Walmart\Models\MP\CL\Orders\OrderSummary $orderSummary orderSummary
     *
     * @return self
     */
    public function setOrderSummary($orderSummary)
    {
        if (is_null($orderSummary)) {
            throw new \InvalidArgumentException('non-nullable orderSummary cannot be null');
        }
        $this->container['orderSummary'] = $orderSummary;
        return $this;
    }

    /**
     * Gets orderLines
     *
     * @return \Walmart\Models\MP\CL\Orders\OrderLines
     */
    public function getOrderLines()
    {
        return $this->container['orderLines'];
    }

    /**
     * Sets orderLines
     *
     * @param \Walmart\Models\MP\CL\Orders\OrderLines $orderLines orderLines
     *
     * @return self
     */
    public function setOrderLines($orderLines)
    {
        if (is_null($orderLines)) {
            throw new \InvalidArgumentException('non-nullable orderLines cannot be null');
        }
        $this->container['orderLines'] = $orderLines;
        return $this;
    }
}
